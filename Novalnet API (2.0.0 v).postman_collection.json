{
	"info": {
		"_postman_id": "54555ae3-cae1-4006-95e3-419a187ba5f0",
		"name": "Novalnet API (2.0.0 v)",
		"description": "## Novalnet API Postman Collection\n\nThis is a postman collection covering the Novalnet API. See [https://developer.novalnet.de/](https://developer.novalnet.de/) for more details.\n\n## Prerequisites\n\n[Postman](https://www.getpostman.com/downloads/)\n\n[Novalnet Account](https://admin.novalnet.de/)\n\nTo start, fork the collection from [Novalnet's public workspace](https://www.postman.com/stripedev/workspace/stripe-developers/overview) within Postman.\n\n<img src=\"https://content.pstmn.io/1c93952f-fa7f-4205-acab-3723fdc0a4f5/aW1hZ2UucG5n\" alt=\"Fork%20Collection\" width=\"374\" height=\"436\">\n\nEnter a name for your fork and select the workspace where it will be created:\n\n<img src=\"https://content.pstmn.io/b03f4921-aafa-453d-b065-bcdc70be5f84/U2VsZWN0aW9uXzMyOS5wbmc=\" alt=\"Fork%20form\" width=\"330\" height=\"387\">\n\n### Import the collection file into your workspace\n\nIf you don't want to fork the collection from the public workspace, you can import it from this repo.\n\nWithin your Postman workspace select the Import button:\n\n<img src=\"https://content.pstmn.io/41557ba2-cad8-4acc-a491-fb3726bf5160/cG9zdG1hbl9pbXBvcnRfY29sbGVjdGlvbi5wbmc=\" alt=\"Import%20collection\" width=\"378\" height=\"43\">\n\n### Set your API Signature & Tariff ID\n\nTo run requests, you must supply your [API Signature and Tariff ID](https://admin.novalnet.de/) and set it as an [environment variable](https://learning.postman.com/docs/sending-requests/variables/) within your workspace.\n\nTo set any environment variable, create a new environment within Postman, You can also fork the environment template from the Novalnet Developers Workspace or you can Import it directly as mentioned in the previous step.\n\n<img src=\"https://content.pstmn.io/8af501dc-3db9-4bc9-aec6-8dbcc9622c90/cG9zdG1hbl9jcmVhdGVfbmV3X2Vudi5wbmc=\" alt=\"create%20a%20new%20environment\" width=\"379\" height=\"405\">\n\n<img src=\"https://content.pstmn.io/f10e83b2-2ebc-4fc0-9743-329fe4cec92c/aW1hZ2UucG5n\" alt=\"Create%20a%20fork\" width=\"376\" height=\"426\">\n\nAdd your secret key as a variable to the environment and save:\n\n<img src=\"https://content.pstmn.io/14070033-964f-4ed0-8a37-82dd0111b025/aW1hZ2UucG5n\" alt=\"Set%20API%20Signature%20&amp;%20Tariff%20ID\" width=\"1056\" height=\"270\">\n\nSet the environment to active:\n\n<img src=\"https://content.pstmn.io/5bccbb2c-86af-4bd0-9ccd-dd3e30895a47/aW1hZ2UucG5n\" alt=\"save%20as%20active\" width=\"406\" height=\"135\">\n\nNow within the collection set it to use the environment you just created:\n\n<img src=\"https://content.pstmn.io/24c25cf7-ce8c-48c1-952e-b7fa52d04cb7/aW1hZ2UucG5n\" alt=\"Set%20environment%20\" width=\"432\" height=\"99\">\n\nIf your environment is set up correctly, you should see your base URL if you mouse over the `base_URL` variable in the URL field:\n\n<img src=\"https://content.pstmn.io/dcf94ebc-63d4-408d-966e-4dfdb1819779/aW1hZ2UucG5n\" alt=\"base%20url%20mouseover\" height=\"284\" width=\"721\">\n\n### Set your Payment Access Key\n\nConfigure your payment access key in the Collection variable.\n\n<img src=\"https://content.pstmn.io/d1d38a55-80be-456f-a59a-f57714d01faa/aW1hZ2UucG5n\" alt=\"Set%20Payment%20access%20key\" width=\"1481\" height=\"332\">\n\nEnsure the configured payment access key is reflected by the mouse over in all the request file headers with base64 encoded format.\n\n<img src=\"https://content.pstmn.io/cff4dec7-4c83-47a2-8618-209a63e62976/aW1hZ2UucG5n\" alt=\"Encoded%20Payment%20access%20key\" height=\"354\" width=\"804\">\n\n## Make a test transaction\n\nYou should be ready now to make a test transaction. Choose any of the requests to initiate a transaction.\n\n<img src=\"https://content.pstmn.io/111c88b8-66f7-4aeb-a50d-d217ea00db93/aW1hZ2UucG5n\" alt=\"Overall%20Collection\" width=\"382\" height=\"758\">\n\n<img src=\"https://content.pstmn.io/de74b259-5ba1-4117-93be-2361a83bbe4b/aW1hZ2UucG5n\" alt=\"Request%20body\" width=\"695\" height=\"461\">\n\n<img src=\"https://content.pstmn.io/769ff3a3-27d1-440a-9b0c-7bf701fba774/aW1hZ2UucG5n\" alt=\"Response%20body\" width=\"774\" height=\"558\">\n\nVerify the Test result of the execution\n\n<img src=\"https://content.pstmn.io/d8bb73f8-d37c-444d-8b6b-3d4dc23d1f8a/aW1hZ2UucG5n\" alt=\"Test%20result\" width=\"668\" height=\"222\">\n\nYou can change the parameters in the collection variables you need to change.\n\n<img src=\"https://content.pstmn.io/93aba8a4-0fea-44a5-b385-65c493ba7cc4/aW1hZ2UucG5n\" alt=\"Collection%20Variables\" width=\"1478\" height=\"825\">\n\n## Tokenization\n\nSelect the Payment folder under One click or Zero amount and choose as Run folder.\n\n<img src=\"https://content.pstmn.io/39e4a6a5-4230-408c-9d1c-6a38f7b45258/aW1hZ2UucG5n\" alt=\"Run%20folder\" width=\"291\" height=\"391\">\n\nNow click the Run Novalnet API button.\n\n<img src=\"https://content.pstmn.io/fa32614f-880e-4de7-a969-67c16350b752/aW1hZ2UucG5n\" alt=\"Run%20Novalnet%20API\" width=\"1253\" height=\"592\">\n\nVerify the Test result of the execution of one click or zero amount process with token\n\n<img src=\"https://content.pstmn.io/b0e78c18-852b-40db-bd14-26e58d62aafd/aW1hZ2UucG5n\" alt=\"Tokenization%20test%20results\" width=\"830\" height=\"450\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20759009",
		"_collection_link": "https://dark-zodiac-891872.postman.co/workspace/Novalnet-AG~6077f96f-a0dd-45ad-aef1-eb11a4b913f8/collection/20759009-54555ae3-cae1-4006-95e3-419a187ba5f0?action=share&creator=20759009&source=collection_link"
	},
	"item": [
		{
			"name": "Payments",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n       \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"merchant\": {\n        \"signature\": \"{{signature}}\",\n        \"tariff\": \"{{tariff}}\"\n    },\n    \"customer\": {\n        \"gender\": \"m\",\n        \"first_name\": \"{{first_name}}\",\n        \"last_name\": \"{{last_name}}\",\n        \"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n            \"house_no\": \"{{billing_house_no}}\",\n            \"street\": \"{{billing_street}}\",\n            \"city\": \"{{billing_city}}\",\n            \"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n        },\n        \"customer_ip\": \"{{customer_ip}}\",\n        \"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\": \"{{vat_id}}\",\n        \"tax_id\": \"{{tax_id}}\",\n        \"reg_no\": \"{{reg_no}}\",\n        \"session\": \"{{session}}\"\n    },\n    \"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n        \"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n        \"amount\": \"1000\",\n        \"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"due_date\": \"{{sepa_due_date}}\",\n        \"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\": \"{{mandate_ref}}\",\n        \"mandate_date\": \"{{mandate_date}}\",\n        \"invoice_no\": \"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\": \"{{nn_bic}}\"\n        },\n        \"debit_reason_1\": \"{{debit_reason_1}}\"\n    },\n    \"custom\": {\n        \"lang\": \"EN\",\n        \"input1\": \"{{input1}}\",\n        \"inputval1\": \"{{inputval1}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\t\t\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {       ",
									"    pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"    pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"{{encodedKeys}}\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t    \"amount\": \"100\",\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",        \n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t    \"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multibanco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"MULTIBANCO\",\n    \t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cashpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"CASHPAYMENT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Online bank transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_BANK_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "giropay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GIROPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sofort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "iDEAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"IDEAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "eps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"EPS\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Przelewy24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PRZELEWY24\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"PLN\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bancontact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"BANCONTACT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_state}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE_CARD\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trustly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"TRUSTLY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alipay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ALIPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "WeChat Pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"WECHATPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"SEPA_CREDIT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"order_date\":\"2021-06-10\",\n        \"order_amount\":\"2000\",\n        \"order_reference\":\"XXXYYYZZZ\",\n        \"credit_reason_1\":\"Test Product\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			],
			"description": "This action immediately books the desired amount. The payment API is equivalent to doing an authorization and captures all at once",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authorize",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(99);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},   \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(99);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n    \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(99);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n    \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(99);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(99);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n            \"house_no\": \"{{billing_house_no}}\",          \n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"{{encodedKeys}}\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\":\"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t    \"amount\": \"5000\",\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n        \t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\":\"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t    \"amount\": \"5000\",\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    }, \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    }, \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(91);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('ON_HOLD');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(84);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"SEPA_CREDIT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"order_date\":\"2021-06-10\",\n        \"order_amount\":\"2000\",\n        \"order_reference\":\"XXXYYYZZZ\",\n        \"credit_reason_1\":\"Test Product\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\"\n        }\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/authorize",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authorize"
							]
						}
					},
					"response": []
				}
			],
			"description": "As the name suggests, this action only performs the basic authorization and will not book the amount immediately. A Payment action - Capture is required to book the authorized amount later.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tokenization",
			"item": [
				{
					"name": "One Click",
					"item": [
						{
							"name": "Direct Debit SEPA",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"sepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The token for follow up transaction is \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"",
													"\t});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"test@novalnet.de\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{sepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Guaranteed Direct Debit SEPA B2C",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"Gsepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The token for follow up transaction is \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"",
													"\t});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n   \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n         \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n   \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{Gsepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Guaranteed Direct Debit SEPA B2B",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"Gsepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The token for follow up transaction is \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"",
													"\t});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n   \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n         \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n   \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{Gsepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Instalment Direct Debit SEPA B2C",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"sepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The token for follow up transaction is \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"",
													"\t});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n  \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"test@novalnet.de\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{sepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Instalment Direct Debit SEPA B2B",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"sepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The token for follow up transaction is \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"",
													"\t});",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n  \"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"test@novalnet.de\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\t\t\t\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{sepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "One-Click Shopping as the name suggests is the feature that offers end-customers to have a faster checkout experience. To process this, we have been offering our server tokenization methodology."
				},
				{
					"name": "Zero Amount",
					"item": [
						{
							"name": "Direct Debit SEPA",
							"item": [
								{
									"name": "Create_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"console.log(jsonData);",
													"pm.environment.set(\"sepatoken\", jsonData.transaction.payment_data.token);",
													"console.log(jsonData.transaction.payment_data.token);",
													"",
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});",
													"",
													"pm.test(\"The amount of the transaction is \"+responseJson.transaction.amount +  \", token has been created for follow up transaction \"+responseJson.transaction.payment_data.token,()=> {",
													"        pm.expect(responseJson.transaction.payment_data).to.have.property(\"token\");",
													"        pm.expect(responseJson.transaction.amount).to.eql(0);",
													"",
													"\t});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": 0,\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The customer\\`s payment data will be stored as tokens for future purchases."
									},
									"response": []
								},
								{
									"name": "Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();",
													"console",
													"pm.test(\"The follow up transaction for \"+responseJson.transaction.payment_type+\" has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
													"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
													"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
													"\t});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
													"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
													"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
													"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
													"pm.variables.set(\"verify_payment_data\", \"1\"); ",
													"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
													"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
													"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
													"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-NN-Access-Key",
												"value": "{{encoded_Payment_Access_Key}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Charset",
												"value": "utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"{{amount}}\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"token\":\"{{sepatoken}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
										},
										"url": {
											"raw": "{{base_url}}/payment",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"payment"
											]
										},
										"description": "The payment token would have been delivered during your initial successful payment request of the corresponding customer (when using _transaction.create_token_). This token replaces the customer\\`s payment data and hence preventing the need to get the payment details from the customer again.\n\nYou will receive the payment token from Novalnet in the token parameter in the child object **payment_data** of the main object **transaction** (_transaction.payment_data.token_), through the following options:"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "Tokenization service also facilitate the zero amount transaction purposes. The zero amount transaction is used if you wish that your customers should not be charged during the initial transaction, but still, their data and payment details are to be verified. Later, you can also book/charge the corresponding customer with the amount using the token generated during the initial zero amount transaction."
				}
			],
			"description": "Tokenization is a process of replacing sensitive data with non-sensitive data. Our tokenization service provides a token that can be used in the place of card/account data, and to perform transactions using that token.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Payment Action",
			"item": [
				{
					"name": "Capture",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"capture_type\", \"PARTIAL\"); //PARTIAL|FINAL",
									"pm.variables.set(\"capture_reference\", \"Reference\"); ",
									"pm.variables.set(\"capture_amount\", \"100\"); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction\":{\n    \"tid\":\"14764400025004152\",\n    \"amount\":\"300\",\n    \"capture\":{\n        \"type\":\"PARTIAL\",\n        \"reference\":\"Reference\"\n    }\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/capture",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"capture"
							]
						},
						"description": "This action collects the funds due from the completed authorizations"
					},
					"response": []
				},
				{
					"name": "Cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('DEACTIVATED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(103);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction\":{\n    \"tid\":\"14764000053203493\"\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"cancel"
							]
						},
						"description": "This action is used to avoid collecting the funds from previously completed authorizations"
					},
					"response": []
				},
				{
					"name": "Refund",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"refund_amount\", 200); ",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"var refund = pm.variables.get(\"refund_amount\");",
									"console.log(refund);",
									"pm.test(\"TRANSACTION_REFUND is \"+responseJson.transaction.status+\" with the amount of \"+responseJson.transaction.refund.amount,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.refund.amount).to.eql(refund);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"transaction\":{\n      \"tid\":\"14764400025102166\",\n      \"amount\":\"100\",\n      \"reason\":\"Product not satisfied\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/refund",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"refund"
							]
						},
						"description": "This action returns funds that were already collected by a Payment or a Capture transaction"
					},
					"response": []
				},
				{
					"name": "Amount Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"update_amount\", 500); ",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"var updated = pm.variables.get(\"update_amount\");",
									"console.log(updated);",
									"pm.test(\"TRANSACTION_UPDATE is \"+responseJson.transaction.status+ \" with the amount of \"+updated,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.amount).to.eql(updated);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction\":{\n    \"tid\":\"14762000047402365\",\n    \"amount\":\"500\",\n    \"order_no\":\"{{order_no}}\",\n    \"invoice_no\":\"{{invoice_no}}\",\n    \"invoice_ref\":\"{{invoice_ref}}\"\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"update"
							]
						},
						"description": "This action will update the existing transaction\\`s attributes like amount."
					},
					"response": []
				},
				{
					"name": "Amount & Due Date Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"update_amount\", 500); ",
									"pm.variables.set(\"update_due_date\", \"2023-06-04\"); //YYYY-MM-DD"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"var amount = pm.variables.get(\"update_amount\");",
									"var date = pm.variables.get(\"update_due_date\");",
									"console.log(amount);",
									"console.log(date);",
									"pm.test(\"TRANSACTION_UPDATE is \"+responseJson.transaction.status+ \" with the amount \"+amount+ \" and due date \" + date,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.amount).to.eql(amount);",
									"        pm.expect(responseJson.transaction.due_date).to.eql(date);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction\":{\n    \"tid\":\"14751800060308654\",\n    \"amount\":\"500\",\n    \"due_date\":\"2023-06-06\",\n    \"order_no\":\"{{order_no}}\",\n    \"invoice_no\":\"{{invoice_no}}\",\n    \"invoice_ref\":\"{{invoice_ref}}\"\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"update"
							]
						},
						"description": "This action will update the existing transaction\\`s attributes like amount, Due date, and Order number."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Instalment Action",
			"item": [
				{
					"name": "Cancel",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"cancel\", \"CANCEL_REMAINING_CYCLES\"); //CANCEL_ALL_CYCLES"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"Instalment has been canceled with type of \"+responseJson.instalment.cancel_type,()=> {",
									"        pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"instalment\":{\n      \"tid\":\"14762000048004442\",\n      \"cancel_type\":\"CANCEL_REMAINING_CYCLES\" //CANCEL_ALL_CYCLES\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/instalment/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"instalment",
								"cancel"
							]
						},
						"description": "This action will cancel the existing instalments or remaining cycles."
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Subscription ",
									"pm.variables.set(\"trial_interval\", \"1m\"); ",
									"pm.variables.set(\"trial_amount\", \"5000\"); ",
									"pm.variables.set(\"expiry_date\", \"2024-03-21\"); //YYYY-MM-DD",
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"500\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\t\t\t\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {       ",
									"    pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"    pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t\t\"amount\": \"500\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {       ",
									"    pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"    pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{subscription_tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t\t\"amount\": \"500\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"subscription\":{\n        \"interval\":\"{{interval}}\",\n        \"trial_interval\":\"{{trial_interval}}\",\n        \"trial_amount\":{{trial_amount}},\n        \"expiry_date\":\"{{expiry_date}}\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);       ",
									"\t});",
									"",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});   ",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"500\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						},
						"description": "Here you can pass the amount, currency, subscription cycle and period during the payment transaction This can be up to two different subscription cycle and period with various amounts, for eg: if you have a business where the end customer pays first month amount 20.00 € and then each quartal 50.00 € endlessly as long as the end customer (or merchant) does not cancel this subscription."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//Subscription ",
							"pm.variables.set(\"trial_interval\", \"1m\"); ",
							"pm.variables.set(\"trial_amount\", \"5000\"); ",
							"pm.variables.set(\"expiry_date\", \"2024-03-21\"); //YYYY-MM-DD"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Subscription Action",
			"item": [
				{
					"name": "Suspend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"         pm.expect(responseJson.subscription).to.have.property(\"subs_id\")      ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"subscription\":{\n      \"tid\":\"14762000048224542\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/subscription/suspend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription",
								"suspend"
							]
						},
						"description": "This action will pause the existing subscription."
					},
					"response": []
				},
				{
					"name": "Reactivate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")         ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"subscription\":{\n      \"tid\":\"14762000048224542\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/subscription/reactivate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription",
								"reactivate"
							]
						},
						"description": "This action will reactivate the existing subscription which has been suspended before."
					},
					"response": []
				},
				{
					"name": "Amount/Date Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id+\" with the next_cycle_date \"+responseJson.subscription.next_cycle_date,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")   ",
									"         pm.expect(responseJson.subscription).to.have.property(\"next_cycle_date\")       ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"subscription\":{\n      \"tid\":14762000048707127,\n      \"amount\":6000,\n      \"interval\":\"3m\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/subscription/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription",
								"update"
							]
						},
						"description": "This action will update the existing subscription\\`s attributes like amount or next recurring date."
					},
					"response": []
				},
				{
					"name": "Payment Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"The payment has been changed to \"+responseJson.transaction.payment_type+\" and the transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id+\" with the next_cycle_date \"+responseJson.subscription.next_cycle_date,()=> {",
									"        pm.expect(responseJson.subscription).to.have.property(\"subs_id\")   ",
									"         pm.expect(responseJson.subscription).to.have.property(\"next_cycle_date\")       ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"subscription\":{\n      \"tid\":14762000049002997\n   },\n   \"transaction\":{\n      \"payment_type\":\"INVOICE\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "https://payport.novalnet.de/v2/subscription/update",
							"protocol": "https",
							"host": [
								"payport",
								"novalnet",
								"de"
							],
							"path": [
								"v2",
								"subscription",
								"update"
							]
						},
						"description": "This action will be useful if you want to update the existing subscription\\`s payment data or the payment type for the subsequent renewals."
					},
					"response": []
				},
				{
					"name": "Cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The subs_id of the transaction is  \"+responseJson.subscription.subs_id,()=> {",
									"          pm.expect(responseJson.subscription).to.have.property(\"subs_id\")    ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"subscription\":{\n      \"tid\":14762000049211672,\n      \"reason\":\"subs cancel\"\n   },\n   \"custom\":{\n      \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/subscription/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"subscription",
								"update"
							]
						},
						"description": "This action will cancel the existing subscription."
					},
					"response": []
				}
			]
		},
		{
			"name": "Marketplace",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Subscription ",
									"pm.variables.set(\"trial_interval\", \"1m\"); ",
									"pm.variables.set(\"trial_amount\", \"5000\"); ",
									"pm.variables.set(\"expiry_date\", \"2024-03-21\"); //YYYY-MM-DD",
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n        \"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":500,\n             \"2271\":1000\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 80\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n        \"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":900\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },  \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n        \"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":900\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },  \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Online bank transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_BANK_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "giropay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GIROPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sofort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "iDEAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"IDEAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "eps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"EPS\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Przelewy24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PRZELEWY24\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"PLN\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bancontact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"BANCONTACT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE_CARD\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trustly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"TRUSTLY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alipay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ALIPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "WeChat Pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"WECHATPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"",
									"pm.test(\"The marketplace transaction id is  \"+responseJson.marketplace.tid,()=> {",
									"        pm.expect(responseJson).to.have.property(\"marketplace\")        ",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"SEPA_CREDIT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"order_date\":\"2021-06-10\",\n        \"order_amount\":\"2000\",\n        \"order_reference\":\"XXXYYYZZZ\",\n        \"credit_reason_1\":\"Test Product\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\"\n        }\n\t},\n    \"marketplace\":{\n        \"tx_split\":{\n            \"2261\":100,\n             \"2271\":120\t\n        },\n        \"commission_split\":{\n            \"2261\": {\n                \"percentage\" :100,\n                \"amount\": 700\n            },\n             \"2271\": {\n                 \"percentage\": 97\n                 }\t\n        }\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Affiliate",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"create_token\":1,\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"        \n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Online bank transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_BANK_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "giropay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GIROPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sofort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "iDEAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"IDEAL\",\n\t\t\"amount\": \"{{amount}}\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "eps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"EPS\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Przelewy24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PRZELEWY24\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"PLN\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bancontact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"BANCONTACT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE_CARD\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trustly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"TRUSTLY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alipay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ALIPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "WeChat Pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"WECHATPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"SEPA_CREDIT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"order_date\":\"2021-06-10\",\n        \"order_amount\":\"2000\",\n        \"order_reference\":\"XXXYYYZZZ\",\n        \"credit_reason_1\":\"Test Product\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\"\n        }\n\t},\n    \"affiliate\":{\n        \"subvendors\":{\n            \"2261\":100,\n            \"2271\":120\n        },\n        \"commission_type\":\"amount\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Marketplace Action",
			"item": [
				{
					"name": "Affiliate Creation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"The Affiliate has been created, the affiliate vendor ID is \"+responseJson.affiliate.vendor,()=> {",
									"        pm.expect(responseJson).to.have.property(\"affiliate\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"merchant\": {\n        \"signature\": \"###YOUR_API_SIGNATURE###\"\n    },\n    \"affiliate\": {\n        \"login\": \"###AFFILIATE_LOGIN###\",\n        \"password\": \"###AFFILIATE_PASSWORD###\",\n        \"reference\": \"affiliateXXX\",\n        \"gender\": \"u\",\n        \"first_name\": \"Max\",\n        \"last_name\": \"Mustermann\",\n        \"email\": \"test@novalnet.de\",\n        \"company_email\": \"info@novalnet.de\",\n        \"address\": {\n            \"company\": \"ABC GmbH\",\n            \"house_no\": \"2\",\n            \"street\": \"Musterstr\",\n            \"city\": \"Musterhausen\",\n            \"zip\": \"12345\",\n            \"country_code\": \"DE\"\n        },\n        \"tel\": \"+49 089 123456\",\n        \"mobile\": \"+49 174 7781423\",\n        \"fax\": \"+49 89 654321\",\n        \"vat_id\": \"DE123456\",\n        \"account_holder\": \"###ACCOUNT_HOLDER###\",\n        \"iban\": \"###IBAN###\"\n    },\n    \"custom\": {\n        \"lang\": \"EN\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/affiliate/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"affiliate",
								"create"
							]
						},
						"description": "This action is used to create/add the new affiliate."
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Invoice",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n         \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n         \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {       ",
									"    pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"    pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"{{encodedKeys}}\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INVOICE\",\n\t    \"amount\": \"100\",\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_INVOICE\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Invoice B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",            \n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_INVOICE\",\n\t\t\"amount\": \"5000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Prepayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PREPAYMENT\",\n\t    \"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Multibanco",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"MULTIBANCO\",\n    \t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cashpayment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('PENDING');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"CASHPAYMENT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{inv_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Online bank transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_BANK_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "giropay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GIROPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sofort",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ONLINE_TRANSFER\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "iDEAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"IDEAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "eps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"EPS\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Przelewy24",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PRZELEWY24\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"PLN\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bancontact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"BANCONTACT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_state}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostFinance Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"POSTFINANCE_CARD\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trustly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"TRUSTLY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "PayPal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"PAYPAL\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alipay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"ALIPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "WeChat Pay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been initiated \"+  \"with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"       ",
									"\t});",
									"pm.test(\"Response contains redirect_url property\", function () {",
									"    pm.expect(responseJson.result).to.have.property(\"redirect_url\");",
									"});    ",
									"",
									"pm.test(\"The redirect_url for the transaction is  \"+responseJson.result.redirect_url,()=> {",
									"         pm.expect(responseJson.result.redirect_url).to.be.an(\"string\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"CN\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"WECHATPAY\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"return_url\": \"{{return_url}}\",\n        \"error_return_url\": \"{{error_return_url}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\"\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEPA Credit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"inv_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"SEPA_CREDIT\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"order_date\":\"2021-06-10\",\n        \"order_amount\":\"2000\",\n        \"order_reference\":\"XXXYYYZZZ\",\n        \"credit_reason_1\":\"Test Product\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\"\n        }\n\t},\n     \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: mailto:support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			],
			"description": "This action immediately books the desired amount. The payment API is equivalent to doing an authorization and captures all at once",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Customer Update",
			"item": [
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"The customer has been updated for the TID \"+responseJson.transaction.transaction,()=> {",
									"        pm.expect(responseJson).to.have.property(\"transaction\")        ",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"transaction\":{\n    \"tid\":\"14761900108110705\"\n  },\n  \"customer\":{\n    \"first_name\":\"Max\",\n    \"last_name\":\"Mustermann\",\n    \"gender\":\"m\",\n    \"email\":\"test@novalnet.de\",\n    \"customer_no\":\"1234\",\n    \"billing\" : {\n\t\t\"street\":\"Musterstr\",\n\t\t\"house_no\":\"2\",\n\t\t\"city\":\"Musterhausen\",\n\t\t\"zip\":\"12345\",\n\t\t\"country_code\":\"DE\",\n\t\t\"company\":\"ABC GmbH\"\n    },\n    \"mobile\":\"+49 174 7781423\",\n    \"tel\":\"+49 089 123456\",\n    \"fax\":\"+49 89 654321\"\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/customer/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customer",
								"update"
							]
						},
						"description": "This action will update a customer's details for all their existing transactions."
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify Payment data",
			"item": [
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n       \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"100\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"verify_payment_data\":\"3\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n\t\t\"amount\": \"1000\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"verify_payment_data\":\"2\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Guaranteed Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"DE24300209002411761956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"merchant\": {\n        \"signature\": \"{{signature}}\",\n        \"tariff\": \"{{tariff}}\"\n    },\n    \"customer\": {\n        \"gender\": \"m\",\n        \"first_name\": \"{{first_name}}\",\n        \"last_name\": \"{{last_name}}\",\n        \"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n            \"house_no\": \"{{billing_house_no}}\",\n            \"street\": \"{{billing_street}}\",\n            \"city\": \"{{billing_city}}\",\n            \"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n        },\n        \"customer_ip\": \"{{customer_ip}}\",\n        \"customer_no\": \"{{customer_no}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\": \"{{vat_id}}\",\n        \"tax_id\": \"{{tax_id}}\",\n        \"reg_no\": \"{{reg_no}}\",\n        \"session\": \"{{session}}\"\n    },\n    \"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n        \"payment_type\": \"GUARANTEED_DIRECT_DEBIT_SEPA\",\n        \"amount\": \"1000\",\n        \"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n        \"due_date\": \"{{sepa_due_date}}\",\n        \"invoice_ref\": \"{{invoice_ref}}\",\n        \"verify_payment_data\":\"3\",\n        \"mandate_ref\": \"{{mandate_ref}}\",\n        \"mandate_date\": \"{{mandate_date}}\",\n        \"invoice_no\": \"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\": \"{{nn_bic}}\"\n        },\n        \"debit_reason_1\": \"{{debit_reason_1}}\"\n    },\n    \"custom\": {\n        \"lang\": \"EN\",\n        \"input1\": \"{{input1}}\",\n        \"inputval1\": \"{{inputval1}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"verify_payment_data\":\"2\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instalment Direct Debit SEPA B2B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(responseJson.transaction.payment_type+\" transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									"pm.test(\"The next instalment for the transaction is  \"+responseJson.instalment.next_cycle_date,()=> {",
									"         pm.expect(responseJson).to.have.property(\"instalment\")",
									"\t});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Direct Debit SEPA ",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"pm.collectionVariables.set(\"Novalnet\", \"tester\");",
									"pm.collectionVariables.set(\"AG\", \"Teste\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n            \"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_street}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\t\t\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n            \"same_as_billing\": \"1\"           \n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": \"{{test_mode}}\",\n\t\t\"payment_type\": \"INSTALMENT_DIRECT_DEBIT_SEPA\",\n\t    \"amount\": \"5000\",\t\n    \t\"currency\": \"{{currency}}\",\n        \"order_no\": \"{{order_no}}\",\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"verify_payment_data\":\"1\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"instalment\":{\n        \"interval\":\"{{interval}}\",\n        \"cycles\":\"3\"\n    },    \n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			],
			"description": "This action immediately books the desired amount. The payment API is equivalent to doing an authorization and captures all at once",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Webhook",
			"item": [
				{
					"name": "Configure",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\":{\n    \"signature\":\"###YOUR_API_SIGNATURE###\"\n  },\n  \"webhook\":{\n    \"url\":\"###YOUR_HOOK_URL###\"\n  },\n  \"custom\":{\n    \"lang\":\"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/webhook/configure",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"webhook",
								"configure"
							]
						}
					},
					"response": []
				}
			],
			"description": "This action is used to configure webhook URL for notification handling."
		},
		{
			"name": "Retrieve",
			"item": [
				{
					"name": "Merchant Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"custom\": {\n    \"lang\": \"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/merchant/details",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"merchant",
								"details"
							]
						},
						"description": "This API will list the available payment methods along with the merchant credentials like Vendor ID, Project ID, available tariff, etc.,"
					},
					"response": []
				},
				{
					"name": "Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"transaction\":{\n      \"tid\":\"14761900108110705\"\n   }\n}"
						},
						"url": {
							"raw": "{{base_url}}/transaction/details",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								"details"
							]
						},
						"description": "This action allows you to retrieve the result of a transaction sent previously using Novalnet\\`s TID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Encryption",
			"item": [
				{
					"name": "working",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getUniqueId() {",
									"  return (Math.floor(Math.random() * 90000000) + 10000000).toString() + ",
									"         (Math.floor(Math.random() * 90000000) + 10000000).toString()",
									"         .substr(0, 16);",
									"}",
									"var amount = 100;",
									"var payment_access_key = \"a87ff679a2f3e71d9181a67b7542122c\"",
									"var uniqueId = getUniqueId();",
									"console.log(uniqueId); ",
									"",
									"var encoded =  CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uniqueId));",
									"pm.collectionVariables.set(\"testing\", encoded);",
									"console.log(encoded); ",
									"console.log(\"test\"); ",
									"",
									"// var encrypted = CryptoJS.AES.encrypt(amount, payment_access_key, { iv: uniqueId }).toString();",
									"// var b64 = CryptoJS.enc.Base64.parse(encrypted).toString(CryptoJS.enc.Hex);",
									"// pm.variables.set(\"b64\", encrypted);",
									"",
									"",
									"",
									"function encrypt(data) {",
									"  var val = CryptoJS.enc.Utf8.parse(JSON.stringify(data));",
									"  var encrypted = CryptoJS.AES.encrypt(val, Key, { iv: IV }).toString();",
									"  var b64 = CryptoJS.enc.Base64.parse(encrypted).toString(CryptoJS.enc.Hex);",
									"  return b64;",
									"}",
									"",
									"//AES",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "YTg3ZmY2NzlhMmYzZTcxZDkxODFhNjdiNzU0MjEyMmM="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							},
							{
								"key": "X-NN-Unique-Key",
								"value": "{{testing}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"merchant\": {\n        \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\",\n        \"tariff\": \"10004\"\n    },\n    \"customer\": {\n        \"first_name\": \"Max\",\n        \"last_name\": \"Mustermann\",\n        \"email\": \"test@novalnet.de\",\n        \"customer_ip\": \"182.156.208.74\",\n        \"customer_no\": 3187,\n        \"tel\": \"+49 089 123456\",\n        \"mobile\": \"+49 174 7781423\",\n        \"billing\": {\n            \"house_no\": \"2\",\n            \"street\": \"Musterstr\",\n            \"city\": \"Musterhausen\",\n            \"zip\": \"12345\",\n            \"country_code\": \"DE\"\n        }\n    },\n    \"transaction\": {\n        \"payment_type\": \"DIRECT_DEBIT_SEPA\",\n        \"amount\": \"{{encrypted_amount}}\",\n        \"currency\": \"EUR\",\n        \"test_mode\": 1,\n        \"due_date\": \"2023-02-28\",\n        \"order_no\": 230010,\n        \"hook_url\": \"https://developer.novalnet.de/demo/webhooks/\",\n        \"create_token\": 1,\n        \"payment_data\": {\n            \"account_holder\": \"Max Mustermann\",\n            \"iban\": \"DE24300209002411761956\"\n        }\n    },\n    \"custom\": {\n        \"lang\": \"EN\"\n    }\n}"
						},
						"url": {
							"raw": "https://payport.novalnet.de/v2/payment",
							"protocol": "https",
							"host": [
								"payport",
								"novalnet",
								"de"
							],
							"path": [
								"v2",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Direct Debit SEPA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"console",
									"pm.test(\"Transaction has been \"+ responseJson.transaction.status+\" with the status code of \"+ responseJson.transaction.status_code,()=> {",
									"        pm.expect(responseJson.transaction.status).to.eql('CONFIRMED');",
									"        pm.expect(responseJson.transaction.status_code).to.eql(100);",
									"\t});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var CryptoJS = require(\"crypto-js\");",
									"",
									"function getUniqueId() {",
									"  return (Math.floor(Math.random() * 90000000) + 10000000).toString() + ",
									"         (Math.floor(Math.random() * 90000000) + 10000000).toString()",
									"         .substr(0, 16);",
									"}",
									"var amount = \"DIRECT_DEBIT_SEPA\";",
									"var payment_access_key = \"a87ff679a2f3e71d9181a67b7542122c\"",
									"var IV = getUniqueId();",
									"console.log(IV); ",
									"",
									"var encoded =  CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(IV));",
									"pm.collectionVariables.set(\"xnnuniqid\", encoded);",
									"console.log(encoded); ",
									"console.log(\"encoded\"); ",
									"",
									"var val = CryptoJS.enc.Utf8.parse(JSON.stringify(amount));",
									"console.log(\"val\"); ",
									"//const encrypted = CryptoJS.AES.encrypt(val, payment_access_key,IV);",
									"const encrypted = CryptoJS.AES.encrypt(val, payment_access_key, { iv: IV }).toString();",
									"console.log(\"encrypted\"); ",
									"console.log(encrypted); ",
									" //var b64 = CryptoJS.enc.Base64.parse(encrypted).toString(CryptoJS.enc.Hex);",
									"// let b64 = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(encrypted));",
									"    const encodedString = btoa(encrypted);",
									" //let b64 = CryptoJS.enc.Base64.stringify(encrypted);",
									" pm.variables.set(\"encrypted_amount\", encodedString);",
									" console.log(encodedString); ",
									"",
									"",
									"//Direct Debit SEPA",
									"pm.variables.set(\"account_holder\", \"Max Mustermann\"); ",
									"pm.collectionVariables.set(\"nn_iban\", \"AT671509000028121956\"); ",
									"pm.variables.set(\"nn_bic\", \"CMCIDEDDXXX\"); ",
									"pm.variables.set(\"sepa_due_date\", \"2023-05-04\"); //YYYY-MM-DD",
									"pm.variables.set(\"verify_payment_data\", \"1\"); ",
									"pm.variables.set(\"mandate_ref\", \"NN-12345678901234567\"); ",
									"pm.variables.set(\"mandate_date\", \"2023-03-21\"); //YYYY-MM-DD",
									"pm.variables.set(\"debit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"debit_reason_5\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_1\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_2\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_3\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_4\", \"www.test.com\");",
									"pm.variables.set(\"credit_reason_5\", \"www.test.com\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Charset",
								"value": "utf-8"
							},
							{
								"key": "X-NN-Unique-Key",
								"value": "{{xnnuniqid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"merchant\": {\n\t\t\"signature\": \"{{signature}}\",\n\t\t\"tariff\": \"{{tariff}}\"\n\t},\n\t\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"country_code\": \"{{billing_country_code}}\",\n            \"state\": \"{{billing_state}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"customer_no\": \"{{customer_no}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"tel\": \"{{tel}}\",\n        \"mobile\": \"{{mobile}}\",\n        \"fax\": \"{{fax}}\",\n        \"shipping\": {\n\t\t\t\"same_as_billing\": \"1\",\n\t\t\t\"first_name\": \"{{shipping_first_name}}\",\n\t\t\t\"last_name\": \"{{shipping_last_name}}\",\n\t\t\t\"email\": \"{{shipping_email}}\",\n\t\t\t\"company\": \"{{shipping_company}}\",\n            \"house_no\": \"{{shipping_house_no}}\",\n            \"street\": \"{{shipping_street}}\",\n            \"city\": \"{{shipping_city}}\",\n            \"zip\": \"{{shipping_zip}}\",\n            \"country_code\": \"{{shipping_country_code}}\",\n            \"tel\": \"{{shipping_tel}}\",\n            \"mobile\": \"{{shipping_mobile}}\",\n            \"state\": \"{{shipping_state}}\"\n\t\t},\n        \"vat_id\":\"{{vat_id}}\",\n        \"tax_id\":\"{{tax_id}}\",   \n        \"reg_no\":\"{{reg_no}}\",   \n        \"session\":\"{{session}}\"\n\t},\n\t\"transaction\": {\n        \"test_mode\": 1,\n\t\t\"payment_type\": \"{{encrypted_amount}}\",\n\t\t\"amount\": \"{{amount}}\",\n\t\t\"currency\": \"{{currency}}\",\n        \"order_no\": {{order_no}},\n        \"hook_url\": \"{{hook_url}}\",\n\t\t\"due_date\": \"{{sepa_due_date}}\",\n\t\t\"invoice_ref\": \"{{invoice_ref}}\",\n        \"verify_payment_data\":\"{{verify_payment_data}}\",\n        \"mandate_ref\":\"{{mandate_ref}}\",\n        \"mandate_date\":\"{{mandate_date}}\",\n        \"invoice_no\":\"{{invoice_no}}\",\n        \"payment_data\": {\n            \"account_holder\": \"{{account_holder}}\",\n            \"iban\": \"{{nn_iban}}\",\n            \"bic\":\"{{nn_bic}}\"\n        },\n        \"debit_reason_1\":\"{{debit_reason_1}}\"\n\t},\n    \"invoicing\":{\n        \"net_amount\":5000,\n        \"gross_amount\":5000,\n        \"tax_percent\":2,\n        \"tax_amount\":2,\n        \"coupon_percent\":1,\n        \"coupon_amount\":10,\n        \"product_details\":{\n            \"code\":\"P001\",\n            \"name\":\"Product name\",\n            \"group\":\"Product group\",\n            \"description\":\"Product description\",\n            \"unit\":\"ST\",\n            \"quantity\":2,\n            \"unit_price\":100,\n            \"total_price\":200,\n            \"tax_amount\":1,\n            \"tax_percent\":1,\n            \"note\":\"Note about the product\"\n        },\n        \"customer_support\":\"Max Mustermann | Email: support@yourshop.de\",\n        \"notice\":{\n            \"1\":\"Notice 1\",\n            \"2\":\"Notice 2\",\n            \"3\":\"Notice 3\"\n        },\n        \"send_invoice_pdf\":1,\n        \"custom_invoice_no\":\"INV-32\"\n    },\n\t\"custom\": {\n\t\t\"lang\": \"EN\",\n        \"input1\":\"{{input1}}\",\n        \"inputval1\":\"{{inputval1}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{base_url}}/payment",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"payment"
							]
						}
					},
					"response": []
				}
			],
			"description": "This section explains how you could initiate and handle the API call in Novalnet with encrypted parameters in request and response."
		},
		{
			"name": "External Fraud Check",
			"item": [
				{
					"name": "Buergel Concheck Realtime DE",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buergel Concheck Realtime AT",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_AT\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buergel Concheck Realtime CH",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_CH\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buergel Riskcheck DE",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_CH\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buergel Riskcheck AT",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_CH\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buergel Riskcheck CH",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_CH\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Identity Fraud Check (IFC)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"BUERGEL_CONCHECK_CH\"\n  },\n\"customer\": {\n\t\t\"gender\": \"m\", \n\t\t\"first_name\": \"{{first_name}}\",\n\t\t\"last_name\": \"{{last_name}}\",\n\t\t\"email\": \"{{test_email}}\",\n        \"billing\": {\n\t\t\t\"company\": \"{{billing_company}}\",\n\t\t\t\"house_no\": \"{{billing_house_no}}\",\n\t\t\t\"street\": \"{{billing_city}}\",\n\t\t\t\"city\": \"{{billing_city}}\",\n\t\t\t\"zip\": \"{{billing_zip}}\",\n            \"tel\": \"{{tel}}\",\n            \"country_code\": \"{{billing_country_code}}\"\n\t\t},\n\t\t\"customer_ip\": \"{{customer_ip}}\",\n\t\t\"birth_date\": \"{{birth_date}}\",\n        \"vat_id\":\"{{vat_id}}\"\n\t},\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Debt Collection Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"COLLECTION_CHECK\",\n   \"payment_data\":{\n           \"iban\": \"###IBAN###\",\n            \"card_number\":\"###CARD_NUMBER###\"\n    }\n  },\n\"custom\": {\n    \"lang\": \"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "IP Country Blockade",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"IP_COUNTRY_CHECK\"\n  },\n    \"customer\": {\n           \"customer_ip\": \"###CUSTOMER_IP###\",\n            \t\"billing\" :{\n                \"country_code\":\"DE\"\n                }\n\t  \n    },\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bank Account Check SEPA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"ACCOUNT_CHECK_SEPA\",\n   \"payment_data\":{\n           \"iban\": \"###IBAN###\",\n            \"bic\":\"###BIC###\"\n    }\n  },\n\"custom\": {\n    \"lang\": \"EN\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Luhn Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"CC_CHECK\",\n    \"payment_data\":{\n        \"card_number\":\"###YOUR_CARD_NUMBER###\",\n        \"card_expiry_month\":\"###YOUR_CARD_EXPIRY_MONTH###\",\n        \"card_expiry_year\":\"###YOUR_CARD_EXPIRY_YEAR###\"\n    }\n  },\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "VAT ID Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"module\": {\n    \"type\": \"VAT_ID_CHECK\"\n  },\n    \"customer\": {\n           \"vat_id\": \"###VAT_ID###\"\n    },\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blacklist Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-NN-Access-Key",
								"value": "{{encoded_Payment_Access_Key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Charset",
								"value": "utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchant\": {\n    \"signature\": \"7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\"\n  },\n  \"customer\": {\n    \"email\": \"{{email}}\"\n    },\n  \"module\": {\n    \"type\": \"BLACKLIST_CHECK\",\n    \"payment_data\":{\n        \"iban\":\"####IBAN####\"\n    }\n  },\n    \"custom\": {\n    \"lang\": \"EN\"\n  }\n\n}"
						},
						"url": {
							"raw": "{{base_url}}/v2/module",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"module"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var plainText = pm.environment.get('payment_accsess_key');",
					"var encoded =  CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(plainText));",
					"pm.globals.set(\"encoded_Payment_Access_Key\", encoded);",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const responseJson = pm.response.json();",
					"console",
					"pm.test(\"Response of result status is \"+responseJson.result.status,()=> {",
					"        pm.expect(responseJson.result.status).to.eql(\"SUCCESS\");",
					"        pm.expect(responseJson.result.status_code).to.eql(100);",
					"\t});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://payport.novalnet.de/v2",
			"type": "string",
			"disabled": true
		},
		{
			"key": "signature",
			"value": "7ibc7ob5|tuJEH3gNbeWJfIHah||nbobljbnmdli0poys|doU3HJVoym7MQ44qf7cpn7pc\t",
			"disabled": true
		},
		{
			"key": "tariff",
			"value": "10004",
			"disabled": true
		},
		{
			"key": "first_name",
			"value": "Norbert"
		},
		{
			"key": "last_name",
			"value": "Maier"
		},
		{
			"key": "email",
			"value": "test@novanet.de",
			"type": "string"
		},
		{
			"key": "billing_company",
			"value": "A.B.C. Gerüstbau GmbH",
			"type": "string"
		},
		{
			"key": "billing_house_no",
			"value": "9",
			"type": "string"
		},
		{
			"key": "billing_street",
			"value": "Hauptstr",
			"type": "string"
		},
		{
			"key": "billing_zip",
			"value": "66862",
			"type": "string"
		},
		{
			"key": "billing_city",
			"value": "Kaiserslautern",
			"type": "string"
		},
		{
			"key": "billing_country_code",
			"value": "DE",
			"type": "string"
		},
		{
			"key": "billing_state",
			"value": "Berlin",
			"type": "string"
		},
		{
			"key": "customer_ip",
			"value": "127.0.0.1",
			"type": "string"
		},
		{
			"key": "customer_no",
			"value": "12345",
			"type": "string"
		},
		{
			"key": "birth_date",
			"value": "1992-06-10",
			"type": "string"
		},
		{
			"key": "tel",
			"value": "+49 089 123456",
			"type": "string"
		},
		{
			"key": "mobile",
			"value": "+491747781423",
			"type": "string"
		},
		{
			"key": "fax",
			"value": "+49 89 654321",
			"type": "string"
		},
		{
			"key": "shipping_first_name",
			"value": "Norbert",
			"type": "string"
		},
		{
			"key": "shipping_last_name",
			"value": "Maier",
			"type": "string"
		},
		{
			"key": "shipping_email",
			"value": "test@novanet.de",
			"type": "string"
		},
		{
			"key": "shipping_company",
			"value": "A.B.C. Gerüstbau GmbH",
			"type": "string"
		},
		{
			"key": "shipping_house_no",
			"value": "9",
			"type": "string"
		},
		{
			"key": "shipping_street",
			"value": "Hauptstr",
			"type": "string"
		},
		{
			"key": "shipping_city",
			"value": "Kaiserslautern",
			"type": "string"
		},
		{
			"key": "shipping_zip",
			"value": "66862",
			"type": "string"
		},
		{
			"key": "shipping_country_code",
			"value": "DE",
			"type": "string"
		},
		{
			"key": "shipping_tel",
			"value": "+49 089 123456",
			"type": "string"
		},
		{
			"key": "shipping_mobile",
			"value": "+491747781423",
			"type": "string"
		},
		{
			"key": "shipping_state",
			"value": "Berlin",
			"type": "string"
		},
		{
			"key": "vat_id",
			"value": "DE123456",
			"type": "string"
		},
		{
			"key": "tax_id",
			"value": "123",
			"type": "string"
		},
		{
			"key": "reg_no",
			"value": "HRB1234",
			"type": "string"
		},
		{
			"key": "session",
			"value": "fedgrgst5653653hdgfsvgdsf622627e",
			"type": "string"
		},
		{
			"key": "amount",
			"value": "5000",
			"type": "string"
		},
		{
			"key": "currency",
			"value": "EUR",
			"type": "string"
		},
		{
			"key": "return_url",
			"value": "https://developer.novalnet.de/onlinepayments/apiparameterreference",
			"type": "string"
		},
		{
			"key": "error_return_url",
			"value": "https://developer.novalnet.de/onlinepayments/apiparameterreference",
			"type": "string"
		},
		{
			"key": "order_no",
			"value": "123456789",
			"type": "string"
		},
		{
			"key": "hook_url",
			"value": "https://developer.novalnet.de/demo/webhooks/",
			"type": "string"
		},
		{
			"key": "order_amount",
			"value": "2000",
			"type": "string"
		},
		{
			"key": "order_reference",
			"value": "XXXYYYZZZ",
			"type": "string"
		},
		{
			"key": "invoice_ref",
			"value": "BNR-14-213257",
			"type": "string"
		},
		{
			"key": "mandate_ref",
			"value": "NN-12345678901234567",
			"type": "string"
		},
		{
			"key": "mandate_date",
			"value": "2023-03-21",
			"type": "string"
		},
		{
			"key": "dynamic_descriptor",
			"value": "www.yourshop.com",
			"type": "string"
		},
		{
			"key": "invoice_no",
			"value": "852963",
			"type": "string"
		},
		{
			"key": "token",
			"value": "RcBw2w00a02c-R22w22w22wNJV-V22wV22w10k22wB18sBR06g00aD04eZ12m10k",
			"type": "string"
		},
		{
			"key": "wallet_token",
			"value": "xVXoBTV-avVtXZV-wyPgqJLJauHkHaBNgVgsmTLgoTgkZVcckqXCBiFkmJgowsyueRaZmkyFocNyBowZ",
			"type": "string",
			"disabled": true
		},
		{
			"key": "input1",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input2",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input3",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input4",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input5",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input6",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "input7",
			"value": "psp",
			"type": "string"
		},
		{
			"key": "inputval1",
			"value": "novalnet",
			"type": "string"
		},
		{
			"key": "inputval2",
			"value": "novalnet",
			"type": "string"
		},
		{
			"key": "inputval3",
			"value": "novalnet",
			"type": "string"
		},
		{
			"key": "inputval4",
			"value": "novalnet"
		},
		{
			"key": "inputval5",
			"value": "novalnet"
		},
		{
			"key": "inputval6",
			"value": "novalnet",
			"type": "string"
		},
		{
			"key": "inputval7",
			"value": "novalnet",
			"type": "string"
		},
		{
			"key": "Novalnet",
			"value": ""
		},
		{
			"key": "AG",
			"value": ""
		},
		{
			"key": "nn_iban",
			"value": ""
		},
		{
			"key": "Payment_Access_Key",
			"value": "19ca14e7ea6328a42e0eb13d585e4c22"
		},
		{
			"key": "interval",
			"value": "2m",
			"type": "string"
		},
		{
			"key": "wallet_token",
			"value": "xVXoBTV-avVtXZV-wyPgqJLJauHkHaBNgVgsmTLgoTgkZVcckqXCBiFkmJgowsyueRaZmkyFocNyBowZ",
			"type": "string"
		},
		{
			"key": "xnnuniqid",
			"value": "",
			"type": "string"
		},
		{
			"key": "testing",
			"value": ""
		}
	]
}